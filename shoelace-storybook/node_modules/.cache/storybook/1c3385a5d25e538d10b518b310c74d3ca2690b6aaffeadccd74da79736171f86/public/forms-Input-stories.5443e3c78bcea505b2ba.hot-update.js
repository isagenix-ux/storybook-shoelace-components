"use strict";
self["webpackHotUpdateshoelace_storybook"]("forms-Input-stories",{

/***/ "./stories/forms/Input.stories.js":
/*!****************************************!*\
  !*** ./stories/forms/Input.stories.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Text: () => (/* binding */ Text),
/* harmony export */   WithIcons: () => (/* binding */ WithIcons),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ "./node_modules/lit/index.js");

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Shoelace/Forms/Input',
  tags: ['autodocs'],
  render: args => (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`
    <sl-input
      type=${args.type}
      size=${args.size}
      ?disabled=${args.disabled}
      ?readonly=${args.readonly}
      ?required=${args.required}
      ?clearable=${args.clearable}
      placeholder=${args.placeholder}
      label=${args.label}
      help-text=${args.helpText}
      value=${args.value}
    >
      ${args.prefix ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<sl-icon slot="prefix" name=${args.prefix}></sl-icon>` : ''}
      ${args.suffix ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<sl-icon slot="suffix" name=${args.suffix}></sl-icon>` : ''}
    </sl-input>
  `,
  argTypes: {
    type: {
      control: 'select',
      options: ['text', 'password', 'email', 'number', 'date', 'search']
    },
    size: {
      control: 'select',
      options: ['small', 'medium', 'large']
    },
    disabled: {
      control: 'boolean'
    },
    readonly: {
      control: 'boolean'
    },
    required: {
      control: 'boolean'
    },
    clearable: {
      control: 'boolean'
    },
    placeholder: {
      control: 'text'
    },
    label: {
      control: 'text'
    },
    helpText: {
      control: 'text'
    },
    value: {
      control: 'text'
    },
    prefix: {
      control: 'text'
    },
    suffix: {
      control: 'text'
    }
  }
});
const Text = {
  args: {
    type: 'text',
    label: 'Label',
    placeholder: 'Type something',
    helpText: 'This is a help text'
  }
};
const WithIcons = {
  args: {
    type: 'search',
    placeholder: 'Search',
    clearable: true,
    prefix: 'search'
  }
};
;
const __namedExportsOrder = ["Text", "WithIcons"];
Text.parameters = {
  ...Text.parameters,
  docs: {
    ...Text.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    type: 'text',\n    label: 'Label',\n    placeholder: 'Type something',\n    helpText: 'This is a help text'\n  }\n}",
      ...Text.parameters?.docs?.source
    }
  }
};
WithIcons.parameters = {
  ...WithIcons.parameters,
  docs: {
    ...WithIcons.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    type: 'search',\n    placeholder: 'Search',\n    clearable: true,\n    prefix: 'search'\n  }\n}",
      ...WithIcons.parameters?.docs?.source
    }
  }
};

/***/ })

});
//# sourceMappingURL=forms-Input-stories.5443e3c78bcea505b2ba.hot-update.js.map