"use strict";
(self["webpackChunkshoelace_storybook"] = self["webpackChunkshoelace_storybook"] || []).push([["Button-stories"],{

/***/ "./stories/Button.stories.js":
/*!***********************************!*\
  !*** ./stories/Button.stories.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Circle: () => (/* binding */ Circle),
/* harmony export */   Default: () => (/* binding */ Default),
/* harmony export */   Loading: () => (/* binding */ Loading),
/* harmony export */   Pill: () => (/* binding */ Pill),
/* harmony export */   Primary: () => (/* binding */ Primary),
/* harmony export */   Success: () => (/* binding */ Success),
/* harmony export */   WithIcon: () => (/* binding */ WithIcon),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ "./node_modules/lit/index.js");
/* harmony import */ var _shoelace_style_shoelace_dist_components_button_button_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @shoelace-style/shoelace/dist/components/button/button.js */ "../node_modules/@shoelace-style/shoelace/dist/components/button/button.js");
/* harmony import */ var _shoelace_style_shoelace_dist_components_icon_icon_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shoelace-style/shoelace/dist/components/icon/icon.js */ "../node_modules/@shoelace-style/shoelace/dist/components/icon/icon.js");

// Import Shoelace components


// More on how to set up stories at: https://storybook.js.org/docs/web-components/writing-stories/introduction
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: 'Shoelace/Button',
  tags: ['autodocs'],
  render: args => (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`
    <sl-button
      variant=${args.variant}
      size=${args.size}
      ?disabled=${args.disabled}
      ?loading=${args.loading}
      ?outline=${args.outline}
      ?pill=${args.pill}
      ?circle=${args.circle}
      ?caret=${args.caret}
    >
      ${args.prefix ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<sl-icon slot="prefix" name=${args.prefix}></sl-icon>` : ''}
      ${args.label}
      ${args.suffix ? (0,lit__WEBPACK_IMPORTED_MODULE_0__.html)`<sl-icon slot="suffix" name=${args.suffix}></sl-icon>` : ''}
    </sl-button>
  `,
  argTypes: {
    variant: {
      control: 'select',
      options: ['default', 'primary', 'success', 'neutral', 'warning', 'danger', 'text']
    },
    size: {
      control: 'select',
      options: ['small', 'medium', 'large']
    },
    disabled: {
      control: 'boolean'
    },
    loading: {
      control: 'boolean'
    },
    outline: {
      control: 'boolean'
    },
    pill: {
      control: 'boolean'
    },
    circle: {
      control: 'boolean'
    },
    caret: {
      control: 'boolean'
    },
    prefix: {
      control: 'text'
    },
    suffix: {
      control: 'text'
    },
    label: {
      control: 'text'
    }
  }
});
// Default button
const Default = {
  args: {
    label: 'Button',
    variant: 'default'
  }
};
// Primary button
const Primary = {
  args: {
    label: 'Primary',
    variant: 'primary'
  }
};
// Success button
const Success = {
  args: {
    label: 'Success',
    variant: 'success'
  }
};
// With icon
const WithIcon = {
  args: {
    label: 'Settings',
    prefix: 'gear'
  }
};
// Loading state
const Loading = {
  args: {
    label: 'Loading',
    loading: true
  }
};
// Pill button
const Pill = {
  args: {
    label: 'Pill Button',
    pill: true
  }
};
// Circle icon button
const Circle = {
  args: {
    circle: true,
    prefix: 'gear',
    label: ''
  }
};
;
const __namedExportsOrder = ["Default", "Primary", "Success", "WithIcon", "Loading", "Pill", "Circle"];
Default.parameters = {
  ...Default.parameters,
  docs: {
    ...Default.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Button',\n    variant: 'default'\n  }\n}",
      ...Default.parameters?.docs?.source
    }
  }
};
Primary.parameters = {
  ...Primary.parameters,
  docs: {
    ...Primary.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Primary',\n    variant: 'primary'\n  }\n}",
      ...Primary.parameters?.docs?.source
    }
  }
};
Success.parameters = {
  ...Success.parameters,
  docs: {
    ...Success.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Success',\n    variant: 'success'\n  }\n}",
      ...Success.parameters?.docs?.source
    }
  }
};
WithIcon.parameters = {
  ...WithIcon.parameters,
  docs: {
    ...WithIcon.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Settings',\n    prefix: 'gear'\n  }\n}",
      ...WithIcon.parameters?.docs?.source
    }
  }
};
Loading.parameters = {
  ...Loading.parameters,
  docs: {
    ...Loading.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Loading',\n    loading: true\n  }\n}",
      ...Loading.parameters?.docs?.source
    }
  }
};
Pill.parameters = {
  ...Pill.parameters,
  docs: {
    ...Pill.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    label: 'Pill Button',\n    pill: true\n  }\n}",
      ...Pill.parameters?.docs?.source
    }
  }
};
Circle.parameters = {
  ...Circle.parameters,
  docs: {
    ...Circle.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    circle: true,\n    prefix: 'gear',\n    label: ''\n  }\n}",
      ...Circle.parameters?.docs?.source
    }
  }
};

/***/ })

}]);
//# sourceMappingURL=Button-stories.iframe.bundle.js.map