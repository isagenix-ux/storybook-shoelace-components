{"version":3,"file":"data-display-Details-stories.3ab37f71.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmJA;;;;;;;AAYA;;AAEA;AACA;AACA;AACA;;AAEA;;;;AAIA;;;AAGA;;;;;;;;;AAUA;;AC5KA;AACA;AACA;;AAEA;;;AAGA;AACA;;AAGA;AAiEA;;;;;;;;;;;;;AAyBA","sources":["webpack://shoelace-storybook/./node_modules/@shoelace-style/shoelace/dist/chunks/chunk.2OJZ4GYU.js","webpack://shoelace-storybook/./stories/data-display/Details.stories.js"],"sourcesContent":["import {\n  details_styles_default\n} from \"./chunk.J7PLVEQM.js\";\nimport {\n  getAnimation,\n  setDefaultAnimation\n} from \"./chunk.K7JGTRV7.js\";\nimport {\n  waitForEvent\n} from \"./chunk.B4BZKR24.js\";\nimport {\n  animateTo,\n  shimKeyframesHeightAuto,\n  stopAnimations\n} from \"./chunk.AJ3ENQ5C.js\";\nimport {\n  LocalizeController\n} from \"./chunk.6CTB5ZDJ.js\";\nimport {\n  SlIcon\n} from \"./chunk.4GJTAPTW.js\";\nimport {\n  watch\n} from \"./chunk.GMYPQTFK.js\";\nimport {\n  component_styles_default\n} from \"./chunk.TUVJKY7S.js\";\nimport {\n  ShoelaceElement\n} from \"./chunk.PFOQ5QRR.js\";\nimport {\n  __decorateClass\n} from \"./chunk.KAW7D32O.js\";\n\n// src/components/details/details.component.ts\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { html } from \"lit\";\nimport { property, query } from \"lit/decorators.js\";\nvar SlDetails = class extends ShoelaceElement {\n  constructor() {\n    super(...arguments);\n    this.localize = new LocalizeController(this);\n    this.open = false;\n    this.disabled = false;\n  }\n  firstUpdated() {\n    this.body.style.height = this.open ? \"auto\" : \"0\";\n    if (this.open) {\n      this.details.open = true;\n    }\n    this.detailsObserver = new MutationObserver((changes) => {\n      for (const change of changes) {\n        if (change.type === \"attributes\" && change.attributeName === \"open\") {\n          if (this.details.open) {\n            this.show();\n          } else {\n            this.hide();\n          }\n        }\n      }\n    });\n    this.detailsObserver.observe(this.details, { attributes: true });\n  }\n  disconnectedCallback() {\n    var _a;\n    super.disconnectedCallback();\n    (_a = this.detailsObserver) == null ? void 0 : _a.disconnect();\n  }\n  handleSummaryClick(event) {\n    event.preventDefault();\n    if (!this.disabled) {\n      if (this.open) {\n        this.hide();\n      } else {\n        this.show();\n      }\n      this.header.focus();\n    }\n  }\n  handleSummaryKeyDown(event) {\n    if (event.key === \"Enter\" || event.key === \" \") {\n      event.preventDefault();\n      if (this.open) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    }\n    if (event.key === \"ArrowUp\" || event.key === \"ArrowLeft\") {\n      event.preventDefault();\n      this.hide();\n    }\n    if (event.key === \"ArrowDown\" || event.key === \"ArrowRight\") {\n      event.preventDefault();\n      this.show();\n    }\n  }\n  async handleOpenChange() {\n    if (this.open) {\n      this.details.open = true;\n      const slShow = this.emit(\"sl-show\", { cancelable: true });\n      if (slShow.defaultPrevented) {\n        this.open = false;\n        this.details.open = false;\n        return;\n      }\n      await stopAnimations(this.body);\n      const { keyframes, options } = getAnimation(this, \"details.show\", { dir: this.localize.dir() });\n      await animateTo(this.body, shimKeyframesHeightAuto(keyframes, this.body.scrollHeight), options);\n      this.body.style.height = \"auto\";\n      this.emit(\"sl-after-show\");\n    } else {\n      const slHide = this.emit(\"sl-hide\", { cancelable: true });\n      if (slHide.defaultPrevented) {\n        this.details.open = true;\n        this.open = true;\n        return;\n      }\n      await stopAnimations(this.body);\n      const { keyframes, options } = getAnimation(this, \"details.hide\", { dir: this.localize.dir() });\n      await animateTo(this.body, shimKeyframesHeightAuto(keyframes, this.body.scrollHeight), options);\n      this.body.style.height = \"auto\";\n      this.details.open = false;\n      this.emit(\"sl-after-hide\");\n    }\n  }\n  /** Shows the details. */\n  async show() {\n    if (this.open || this.disabled) {\n      return void 0;\n    }\n    this.open = true;\n    return waitForEvent(this, \"sl-after-show\");\n  }\n  /** Hides the details */\n  async hide() {\n    if (!this.open || this.disabled) {\n      return void 0;\n    }\n    this.open = false;\n    return waitForEvent(this, \"sl-after-hide\");\n  }\n  render() {\n    const isRtl = this.localize.dir() === \"rtl\";\n    return html`\n      <details\n        part=\"base\"\n        class=${classMap({\n      details: true,\n      \"details--open\": this.open,\n      \"details--disabled\": this.disabled,\n      \"details--rtl\": isRtl\n    })}\n      >\n        <summary\n          part=\"header\"\n          id=\"header\"\n          class=\"details__header\"\n          role=\"button\"\n          aria-expanded=${this.open ? \"true\" : \"false\"}\n          aria-controls=\"content\"\n          aria-disabled=${this.disabled ? \"true\" : \"false\"}\n          tabindex=${this.disabled ? \"-1\" : \"0\"}\n          @click=${this.handleSummaryClick}\n          @keydown=${this.handleSummaryKeyDown}\n        >\n          <slot name=\"summary\" part=\"summary\" class=\"details__summary\">${this.summary}</slot>\n\n          <span part=\"summary-icon\" class=\"details__summary-icon\">\n            <slot name=\"expand-icon\">\n              <sl-icon library=\"system\" name=${isRtl ? \"chevron-left\" : \"chevron-right\"}></sl-icon>\n            </slot>\n            <slot name=\"collapse-icon\">\n              <sl-icon library=\"system\" name=${isRtl ? \"chevron-left\" : \"chevron-right\"}></sl-icon>\n            </slot>\n          </span>\n        </summary>\n\n        <div class=\"details__body\" role=\"region\" aria-labelledby=\"header\">\n          <slot part=\"content\" id=\"content\" class=\"details__content\"></slot>\n        </div>\n      </details>\n    `;\n  }\n};\nSlDetails.styles = [component_styles_default, details_styles_default];\nSlDetails.dependencies = {\n  \"sl-icon\": SlIcon\n};\n__decorateClass([\n  query(\".details\")\n], SlDetails.prototype, \"details\", 2);\n__decorateClass([\n  query(\".details__header\")\n], SlDetails.prototype, \"header\", 2);\n__decorateClass([\n  query(\".details__body\")\n], SlDetails.prototype, \"body\", 2);\n__decorateClass([\n  query(\".details__expand-icon-slot\")\n], SlDetails.prototype, \"expandIconSlot\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], SlDetails.prototype, \"open\", 2);\n__decorateClass([\n  property()\n], SlDetails.prototype, \"summary\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], SlDetails.prototype, \"disabled\", 2);\n__decorateClass([\n  watch(\"open\", { waitUntilFirstUpdate: true })\n], SlDetails.prototype, \"handleOpenChange\", 1);\nsetDefaultAnimation(\"details.show\", {\n  keyframes: [\n    { height: \"0\", opacity: \"0\" },\n    { height: \"auto\", opacity: \"1\" }\n  ],\n  options: { duration: 250, easing: \"linear\" }\n});\nsetDefaultAnimation(\"details.hide\", {\n  keyframes: [\n    { height: \"auto\", opacity: \"1\" },\n    { height: \"0\", opacity: \"0\" }\n  ],\n  options: { duration: 250, easing: \"linear\" }\n});\n\nexport {\n  SlDetails\n};\n","import { html } from 'lit';\n\n// Import Shoelace components\nimport '@shoelace-style/shoelace/dist/components/details/details.js';\nimport '@shoelace-style/shoelace/dist/components/icon/icon.js';\n\nconst meta = {\n  title: 'Shoelace/Data Display/Details',\n  tags: ['autodocs'],\n  render: (args) => html`\n    <sl-details\n      summary=${args.summary}\n      ?open=${args.open}\n      ?disabled=${args.disabled}\n    >\n      ${args.customIcons ? html`\n        <sl-icon name=\"plus-square\" slot=\"expand-icon\"></sl-icon>\n        <sl-icon name=\"dash-square\" slot=\"collapse-icon\"></sl-icon>\n      ` : ''}\n      ${args.content}\n    </sl-details>\n  `,\n  argTypes: {\n    summary: {\n      control: 'text',\n      description: 'The summary to show in the header'\n    },\n    open: {\n      control: 'boolean',\n      description: 'Indicates whether the details is open'\n    },\n    disabled: {\n      control: 'boolean',\n      description: 'Disables the details so it can\\'t be toggled'\n    },\n    customIcons: {\n      control: 'boolean',\n      description: 'Use custom expand/collapse icons'\n    },\n    content: {\n      control: 'text',\n      description: 'The details content'\n    }\n  }\n};\n\nexport default meta;\n\n// Basic details\nexport const Basic = {\n  args: {\n    summary: 'Toggle Me',\n    content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.'\n  }\n};\n\n// Open by default\nexport const OpenByDefault = {\n  args: {\n    summary: 'Toggle Me',\n    content: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.',\n    open: true\n  }\n};\n\n// Disabled\nexport const Disabled = {\n  args: {\n    summary: 'Disabled',\n    content: 'This content cannot be shown because the details element is disabled.',\n    disabled: true\n  }\n};\n\n// Custom Icons\nexport const CustomIcons = {\n  args: {\n    summary: 'Toggle Me',\n    content: 'This details element uses custom expand and collapse icons.',\n    customIcons: true\n  }\n};\n\n// Details Group\nexport const DetailsGroup = {\n  render: () => {\n    // Handle showing only one details at a time\n    const handleShow = (event) => {\n      if (event.target.tagName.toLowerCase() === 'sl-details') {\n        const details = event.target.parentElement.querySelectorAll('sl-details');\n        details.forEach(d => {\n          d.open = d === event.target;\n        });\n      }\n    };\n\n    return html`\n      <div @sl-show=${handleShow} style=\"display: flex; flex-direction: column; gap: var(--sl-spacing-2x-small);\">\n        <sl-details summary=\"First\" open>\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n        </sl-details>\n\n        <sl-details summary=\"Second\">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n        </sl-details>\n\n        <sl-details summary=\"Third\">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n        </sl-details>\n      </div>\n    `;\n  }\n}; ;export const __namedExportsOrder = [\"Basic\",\"OpenByDefault\",\"Disabled\",\"CustomIcons\",\"DetailsGroup\"];"],"names":[],"sourceRoot":""}