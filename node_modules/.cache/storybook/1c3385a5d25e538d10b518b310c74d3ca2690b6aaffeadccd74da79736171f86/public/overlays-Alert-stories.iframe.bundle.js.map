{"version":3,"file":"overlays-Alert-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://shoelace-storybook/./stories/overlays/Alert.stories.js"],"sourcesContent":["import { html } from 'lit';\n\n// Import Shoelace components\nimport '@shoelace-style/shoelace/dist/components/alert/alert.js';\nimport '@shoelace-style/shoelace/dist/components/icon/icon.js';\n\nconst meta = {\n  title: 'Shoelace/Overlays/Alert',\n  tags: ['autodocs'],\n  render: (args) => {\n    // Create a container element that will persist\n    const container = document.createElement('div');\n    \n    // Render the alert into the container\n    const alert = document.createElement('sl-alert');\n    alert.variant = args.variant || 'primary';\n    alert.open = true;\n    alert.closable = args.closable;\n    alert.duration = args.duration;\n    alert.countdown = args.countdown || '';\n    \n    if (args.icon) {\n      const icon = document.createElement('sl-icon');\n      icon.slot = 'icon';\n      icon.name = args.icon;\n      alert.appendChild(icon);\n    }\n    \n    if (args.hasHeader) {\n      const header = document.createElement('strong');\n      header.textContent = args.header;\n      alert.appendChild(header);\n      alert.appendChild(document.createElement('br'));\n    }\n    \n    alert.appendChild(document.createTextNode(args.content));\n    container.appendChild(alert);\n    \n    return container;\n  },\n  argTypes: {\n    variant: {\n      control: 'select',\n      options: ['primary', 'success', 'neutral', 'warning', 'danger']\n    },\n    closable: { control: 'boolean' },\n    duration: { control: 'number' },\n    countdown: { \n      control: 'select',\n      options: ['', 'rtl', 'ltr']\n    },\n    icon: { control: 'text' },\n    hasHeader: { control: 'boolean' },\n    header: { control: 'text' },\n    content: { control: 'text' }\n  }\n};\n\nexport default meta;\n\n// Basic alert\nexport const Basic = {\n  args: {\n    content: 'This is a standard alert. You can customize its content and even the icon.',\n    icon: 'info-circle'\n  }\n};\n\n// Variants\nexport const Primary = {\n  args: {\n    variant: 'primary',\n    hasHeader: true,\n    header: 'This is super informative',\n    content: 'You can tell by how pretty the alert is.',\n    icon: 'info-circle'\n  }\n};\n\nexport const Success = {\n  args: {\n    variant: 'success',\n    hasHeader: true,\n    header: 'Your changes have been saved',\n    content: 'You can safely exit the app now.',\n    icon: 'check2-circle'\n  }\n};\n\nexport const Neutral = {\n  args: {\n    variant: 'neutral',\n    hasHeader: true,\n    header: 'Your settings have been updated',\n    content: 'Settings will take effect on next login.',\n    icon: 'gear'\n  }\n};\n\nexport const Warning = {\n  args: {\n    variant: 'warning',\n    hasHeader: true,\n    header: 'Your session has ended',\n    content: 'Please login again to continue.',\n    icon: 'exclamation-triangle'\n  }\n};\n\nexport const Danger = {\n  args: {\n    variant: 'danger',\n    hasHeader: true,\n    header: 'Your account has been deleted',\n    content: 'We\\'re very sorry to see you go!',\n    icon: 'exclamation-octagon'\n  }\n};\n\n// Closable alert\nexport const Closable = {\n  args: {\n    closable: true,\n    content: 'You can close this alert any time!',\n    icon: 'info-circle'\n  }\n};\n\n// Without icon\nexport const WithoutIcon = {\n  args: {\n    content: 'Nothing fancy here, just a simple alert.'\n  }\n};\n\n// With duration\nexport const WithDuration = {\n  args: {\n    closable: true,\n    duration: 3000,\n    content: 'This alert will automatically hide itself after three seconds, unless you interact with it.',\n    icon: 'info-circle'\n  }\n};\n\n// With countdown\nexport const WithCountdown = {\n  args: {\n    closable: true,\n    duration: 10000,\n    countdown: 'rtl',\n    content: 'You\\'re not stuck, the alert will close after a pretty long duration.',\n    icon: 'info-circle'\n  }\n}; ;export const __namedExportsOrder = [\"Basic\",\"Primary\",\"Success\",\"Neutral\",\"Warning\",\"Danger\",\"Closable\",\"WithoutIcon\",\"WithDuration\",\"WithCountdown\"];"],"names":[],"sourceRoot":""}