"use strict";
(self["webpackChunkshoelace_storybook"] = self["webpackChunkshoelace_storybook"] || []).push([["overlays-Alert-stories"],{

/***/ "./stories/overlays/Alert.stories.js":
/*!*******************************************!*\
  !*** ./stories/overlays/Alert.stories.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Basic: () => (/* binding */ Basic),
/* harmony export */   Closable: () => (/* binding */ Closable),
/* harmony export */   Danger: () => (/* binding */ Danger),
/* harmony export */   Neutral: () => (/* binding */ Neutral),
/* harmony export */   Primary: () => (/* binding */ Primary),
/* harmony export */   Success: () => (/* binding */ Success),
/* harmony export */   Warning: () => (/* binding */ Warning),
/* harmony export */   WithCountdown: () => (/* binding */ WithCountdown),
/* harmony export */   WithDuration: () => (/* binding */ WithDuration),
/* harmony export */   WithoutIcon: () => (/* binding */ WithoutIcon),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var lit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lit */ "./node_modules/lit/index.js");
/* harmony import */ var _shoelace_style_shoelace_dist_components_alert_alert_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @shoelace-style/shoelace/dist/components/alert/alert.js */ "./node_modules/@shoelace-style/shoelace/dist/components/alert/alert.js");
/* harmony import */ var _shoelace_style_shoelace_dist_components_icon_icon_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @shoelace-style/shoelace/dist/components/icon/icon.js */ "./node_modules/@shoelace-style/shoelace/dist/components/icon/icon.js");


// Import Shoelace components


const meta = {
  title: 'Shoelace/Overlays/Alert',
  tags: ['autodocs'],
  render: args => {
    // Create a container element that will persist
    const container = document.createElement('div');

    // Render the alert into the container
    const alert = document.createElement('sl-alert');
    alert.variant = args.variant || 'primary';
    alert.open = true;
    alert.closable = args.closable;
    alert.duration = args.duration;
    alert.countdown = args.countdown || '';
    if (args.icon) {
      const icon = document.createElement('sl-icon');
      icon.slot = 'icon';
      icon.name = args.icon;
      alert.appendChild(icon);
    }
    if (args.hasHeader) {
      const header = document.createElement('strong');
      header.textContent = args.header;
      alert.appendChild(header);
      alert.appendChild(document.createElement('br'));
    }
    alert.appendChild(document.createTextNode(args.content));
    container.appendChild(alert);
    return container;
  },
  argTypes: {
    variant: {
      control: 'select',
      options: ['primary', 'success', 'neutral', 'warning', 'danger']
    },
    closable: {
      control: 'boolean'
    },
    duration: {
      control: 'number'
    },
    countdown: {
      control: 'select',
      options: ['', 'rtl', 'ltr']
    },
    icon: {
      control: 'text'
    },
    hasHeader: {
      control: 'boolean'
    },
    header: {
      control: 'text'
    },
    content: {
      control: 'text'
    }
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);

// Basic alert
const Basic = {
  args: {
    content: 'This is a standard alert. You can customize its content and even the icon.',
    icon: 'info-circle'
  }
};

// Variants
const Primary = {
  args: {
    variant: 'primary',
    hasHeader: true,
    header: 'This is super informative',
    content: 'You can tell by how pretty the alert is.',
    icon: 'info-circle'
  }
};
const Success = {
  args: {
    variant: 'success',
    hasHeader: true,
    header: 'Your changes have been saved',
    content: 'You can safely exit the app now.',
    icon: 'check2-circle'
  }
};
const Neutral = {
  args: {
    variant: 'neutral',
    hasHeader: true,
    header: 'Your settings have been updated',
    content: 'Settings will take effect on next login.',
    icon: 'gear'
  }
};
const Warning = {
  args: {
    variant: 'warning',
    hasHeader: true,
    header: 'Your session has ended',
    content: 'Please login again to continue.',
    icon: 'exclamation-triangle'
  }
};
const Danger = {
  args: {
    variant: 'danger',
    hasHeader: true,
    header: 'Your account has been deleted',
    content: 'We\'re very sorry to see you go!',
    icon: 'exclamation-octagon'
  }
};

// Closable alert
const Closable = {
  args: {
    closable: true,
    content: 'You can close this alert any time!',
    icon: 'info-circle'
  }
};

// Without icon
const WithoutIcon = {
  args: {
    content: 'Nothing fancy here, just a simple alert.'
  }
};

// With duration
const WithDuration = {
  args: {
    closable: true,
    duration: 3000,
    content: 'This alert will automatically hide itself after three seconds, unless you interact with it.',
    icon: 'info-circle'
  }
};

// With countdown
const WithCountdown = {
  args: {
    closable: true,
    duration: 10000,
    countdown: 'rtl',
    content: 'You\'re not stuck, the alert will close after a pretty long duration.',
    icon: 'info-circle'
  }
};
;
const __namedExportsOrder = ["Basic", "Primary", "Success", "Neutral", "Warning", "Danger", "Closable", "WithoutIcon", "WithDuration", "WithCountdown"];
Basic.parameters = {
  ...Basic.parameters,
  docs: {
    ...Basic.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    content: 'This is a standard alert. You can customize its content and even the icon.',\n    icon: 'info-circle'\n  }\n}",
      ...Basic.parameters?.docs?.source
    }
  }
};
Primary.parameters = {
  ...Primary.parameters,
  docs: {
    ...Primary.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    variant: 'primary',\n    hasHeader: true,\n    header: 'This is super informative',\n    content: 'You can tell by how pretty the alert is.',\n    icon: 'info-circle'\n  }\n}",
      ...Primary.parameters?.docs?.source
    }
  }
};
Success.parameters = {
  ...Success.parameters,
  docs: {
    ...Success.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    variant: 'success',\n    hasHeader: true,\n    header: 'Your changes have been saved',\n    content: 'You can safely exit the app now.',\n    icon: 'check2-circle'\n  }\n}",
      ...Success.parameters?.docs?.source
    }
  }
};
Neutral.parameters = {
  ...Neutral.parameters,
  docs: {
    ...Neutral.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    variant: 'neutral',\n    hasHeader: true,\n    header: 'Your settings have been updated',\n    content: 'Settings will take effect on next login.',\n    icon: 'gear'\n  }\n}",
      ...Neutral.parameters?.docs?.source
    }
  }
};
Warning.parameters = {
  ...Warning.parameters,
  docs: {
    ...Warning.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    variant: 'warning',\n    hasHeader: true,\n    header: 'Your session has ended',\n    content: 'Please login again to continue.',\n    icon: 'exclamation-triangle'\n  }\n}",
      ...Warning.parameters?.docs?.source
    }
  }
};
Danger.parameters = {
  ...Danger.parameters,
  docs: {
    ...Danger.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    variant: 'danger',\n    hasHeader: true,\n    header: 'Your account has been deleted',\n    content: 'We\\'re very sorry to see you go!',\n    icon: 'exclamation-octagon'\n  }\n}",
      ...Danger.parameters?.docs?.source
    }
  }
};
Closable.parameters = {
  ...Closable.parameters,
  docs: {
    ...Closable.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    closable: true,\n    content: 'You can close this alert any time!',\n    icon: 'info-circle'\n  }\n}",
      ...Closable.parameters?.docs?.source
    }
  }
};
WithoutIcon.parameters = {
  ...WithoutIcon.parameters,
  docs: {
    ...WithoutIcon.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    content: 'Nothing fancy here, just a simple alert.'\n  }\n}",
      ...WithoutIcon.parameters?.docs?.source
    }
  }
};
WithDuration.parameters = {
  ...WithDuration.parameters,
  docs: {
    ...WithDuration.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    closable: true,\n    duration: 3000,\n    content: 'This alert will automatically hide itself after three seconds, unless you interact with it.',\n    icon: 'info-circle'\n  }\n}",
      ...WithDuration.parameters?.docs?.source
    }
  }
};
WithCountdown.parameters = {
  ...WithCountdown.parameters,
  docs: {
    ...WithCountdown.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    closable: true,\n    duration: 10000,\n    countdown: 'rtl',\n    content: 'You\\'re not stuck, the alert will close after a pretty long duration.',\n    icon: 'info-circle'\n  }\n}",
      ...WithCountdown.parameters?.docs?.source
    }
  }
};

/***/ })

}]);
//# sourceMappingURL=overlays-Alert-stories.iframe.bundle.js.map