{"version":3,"file":"data-display-Tag-stories.6bf427a3.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;;;;AAoBA;;;;;;AAMA;;AAEA;;;AAGA;;AAGA;ACfA;;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;;;;;;;;AA0CA;;;;;;AAWA;;;;;;AAWA;;AAUA;AACA;AACA;;;;;;;AAOA;;;;;;;;;AAmBA;;;;;;;;;;;;;;;;;;;AAqBA","sources":["webpack://shoelace-storybook/./node_modules/@shoelace-style/shoelace/dist/chunks/chunk.GQULGLWO.js","webpack://shoelace-storybook/./node_modules/@shoelace-style/shoelace/dist/chunks/chunk.HLJ2JR6P.js","webpack://shoelace-storybook/./stories/data-display/Tag.stories.js"],"sourcesContent":["import {\n  tag_styles_default\n} from \"./chunk.V2OL7VMD.js\";\nimport {\n  SlIconButton\n} from \"./chunk.HLJ2JR6P.js\";\nimport {\n  LocalizeController\n} from \"./chunk.6CTB5ZDJ.js\";\nimport {\n  component_styles_default\n} from \"./chunk.TUVJKY7S.js\";\nimport {\n  ShoelaceElement\n} from \"./chunk.PFOQ5QRR.js\";\nimport {\n  __decorateClass\n} from \"./chunk.KAW7D32O.js\";\n\n// src/components/tag/tag.component.ts\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { html } from \"lit\";\nimport { property } from \"lit/decorators.js\";\nvar SlTag = class extends ShoelaceElement {\n  constructor() {\n    super(...arguments);\n    this.localize = new LocalizeController(this);\n    this.variant = \"neutral\";\n    this.size = \"medium\";\n    this.pill = false;\n    this.removable = false;\n  }\n  handleRemoveClick() {\n    this.emit(\"sl-remove\");\n  }\n  render() {\n    return html`\n      <span\n        part=\"base\"\n        class=${classMap({\n      tag: true,\n      // Types\n      \"tag--primary\": this.variant === \"primary\",\n      \"tag--success\": this.variant === \"success\",\n      \"tag--neutral\": this.variant === \"neutral\",\n      \"tag--warning\": this.variant === \"warning\",\n      \"tag--danger\": this.variant === \"danger\",\n      \"tag--text\": this.variant === \"text\",\n      // Sizes\n      \"tag--small\": this.size === \"small\",\n      \"tag--medium\": this.size === \"medium\",\n      \"tag--large\": this.size === \"large\",\n      // Modifiers\n      \"tag--pill\": this.pill,\n      \"tag--removable\": this.removable\n    })}\n      >\n        <slot part=\"content\" class=\"tag__content\"></slot>\n\n        ${this.removable ? html`\n              <sl-icon-button\n                part=\"remove-button\"\n                exportparts=\"base:remove-button__base\"\n                name=\"x-lg\"\n                library=\"system\"\n                label=${this.localize.term(\"remove\")}\n                class=\"tag__remove\"\n                @click=${this.handleRemoveClick}\n                tabindex=\"-1\"\n              ></sl-icon-button>\n            ` : \"\"}\n      </span>\n    `;\n  }\n};\nSlTag.styles = [component_styles_default, tag_styles_default];\nSlTag.dependencies = { \"sl-icon-button\": SlIconButton };\n__decorateClass([\n  property({ reflect: true })\n], SlTag.prototype, \"variant\", 2);\n__decorateClass([\n  property({ reflect: true })\n], SlTag.prototype, \"size\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], SlTag.prototype, \"pill\", 2);\n__decorateClass([\n  property({ type: Boolean })\n], SlTag.prototype, \"removable\", 2);\n\nexport {\n  SlTag\n};\n","import {\n  icon_button_styles_default\n} from \"./chunk.6I2T3DLI.js\";\nimport {\n  SlIcon\n} from \"./chunk.4GJTAPTW.js\";\nimport {\n  component_styles_default\n} from \"./chunk.TUVJKY7S.js\";\nimport {\n  ShoelaceElement\n} from \"./chunk.PFOQ5QRR.js\";\nimport {\n  __decorateClass\n} from \"./chunk.KAW7D32O.js\";\n\n// src/components/icon-button/icon-button.component.ts\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { html, literal } from \"lit/static-html.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { property, query, state } from \"lit/decorators.js\";\nvar SlIconButton = class extends ShoelaceElement {\n  constructor() {\n    super(...arguments);\n    this.hasFocus = false;\n    this.label = \"\";\n    this.disabled = false;\n  }\n  handleBlur() {\n    this.hasFocus = false;\n    this.emit(\"sl-blur\");\n  }\n  handleFocus() {\n    this.hasFocus = true;\n    this.emit(\"sl-focus\");\n  }\n  handleClick(event) {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n  /** Simulates a click on the icon button. */\n  click() {\n    this.button.click();\n  }\n  /** Sets focus on the icon button. */\n  focus(options) {\n    this.button.focus(options);\n  }\n  /** Removes focus from the icon button. */\n  blur() {\n    this.button.blur();\n  }\n  render() {\n    const isLink = this.href ? true : false;\n    const tag = isLink ? literal`a` : literal`button`;\n    return html`\n      <${tag}\n        part=\"base\"\n        class=${classMap({\n      \"icon-button\": true,\n      \"icon-button--disabled\": !isLink && this.disabled,\n      \"icon-button--focused\": this.hasFocus\n    })}\n        ?disabled=${ifDefined(isLink ? void 0 : this.disabled)}\n        type=${ifDefined(isLink ? void 0 : \"button\")}\n        href=${ifDefined(isLink ? this.href : void 0)}\n        target=${ifDefined(isLink ? this.target : void 0)}\n        download=${ifDefined(isLink ? this.download : void 0)}\n        rel=${ifDefined(isLink && this.target ? \"noreferrer noopener\" : void 0)}\n        role=${ifDefined(isLink ? void 0 : \"button\")}\n        aria-disabled=${this.disabled ? \"true\" : \"false\"}\n        aria-label=\"${this.label}\"\n        tabindex=${this.disabled ? \"-1\" : \"0\"}\n        @blur=${this.handleBlur}\n        @focus=${this.handleFocus}\n        @click=${this.handleClick}\n      >\n        <sl-icon\n          class=\"icon-button__icon\"\n          name=${ifDefined(this.name)}\n          library=${ifDefined(this.library)}\n          src=${ifDefined(this.src)}\n          aria-hidden=\"true\"\n        ></sl-icon>\n      </${tag}>\n    `;\n  }\n};\nSlIconButton.styles = [component_styles_default, icon_button_styles_default];\nSlIconButton.dependencies = { \"sl-icon\": SlIcon };\n__decorateClass([\n  query(\".icon-button\")\n], SlIconButton.prototype, \"button\", 2);\n__decorateClass([\n  state()\n], SlIconButton.prototype, \"hasFocus\", 2);\n__decorateClass([\n  property()\n], SlIconButton.prototype, \"name\", 2);\n__decorateClass([\n  property()\n], SlIconButton.prototype, \"library\", 2);\n__decorateClass([\n  property()\n], SlIconButton.prototype, \"src\", 2);\n__decorateClass([\n  property()\n], SlIconButton.prototype, \"href\", 2);\n__decorateClass([\n  property()\n], SlIconButton.prototype, \"target\", 2);\n__decorateClass([\n  property()\n], SlIconButton.prototype, \"download\", 2);\n__decorateClass([\n  property()\n], SlIconButton.prototype, \"label\", 2);\n__decorateClass([\n  property({ type: Boolean, reflect: true })\n], SlIconButton.prototype, \"disabled\", 2);\n\nexport {\n  SlIconButton\n};\n","import { html } from 'lit';\n\n// Import Shoelace components\nimport '@shoelace-style/shoelace/dist/components/tag/tag.js';\nimport '@shoelace-style/shoelace/dist/components/icon/icon.js';\nimport '@shoelace-style/shoelace/dist/components/icon-button/icon-button.js';\n\nconst meta = {\n  title: 'Shoelace/Data Display/Tag',\n  tags: ['autodocs'],\n  render: (args) => html`\n    <sl-tag\n      variant=${args.variant || 'neutral'}\n      size=${args.size || 'medium'}\n      ?pill=${args.pill}\n      ?removable=${args.removable}\n      @sl-remove=${args.onRemove}\n    >\n      ${args.content}\n    </sl-tag>\n  `,\n  argTypes: {\n    variant: {\n      control: 'select',\n      options: ['primary', 'success', 'neutral', 'warning', 'danger'],\n      description: 'The tag\\'s theme variant'\n    },\n    size: {\n      control: 'select',\n      options: ['small', 'medium', 'large'],\n      description: 'The tag\\'s size'\n    },\n    pill: {\n      control: 'boolean',\n      description: 'Draws a pill-style tag with rounded edges'\n    },\n    removable: {\n      control: 'boolean',\n      description: 'Makes the tag removable and shows a remove button'\n    },\n    content: {\n      control: 'text',\n      description: 'The tag\\'s content'\n    }\n  }\n};\n\nexport default meta;\n\n// Basic tags with variants\nexport const Variants = {\n  render: () => html`\n    <div style=\"display: flex; flex-wrap: wrap; gap: 0.5rem;\">\n      <sl-tag variant=\"primary\">Primary</sl-tag>\n      <sl-tag variant=\"success\">Success</sl-tag>\n      <sl-tag variant=\"neutral\">Neutral</sl-tag>\n      <sl-tag variant=\"warning\">Warning</sl-tag>\n      <sl-tag variant=\"danger\">Danger</sl-tag>\n    </div>\n  `\n};\n\n// Sizes\nexport const Sizes = {\n  render: () => html`\n    <div style=\"display: flex; flex-wrap: wrap; gap: 0.5rem; align-items: center;\">\n      <sl-tag size=\"small\">Small</sl-tag>\n      <sl-tag size=\"medium\">Medium</sl-tag>\n      <sl-tag size=\"large\">Large</sl-tag>\n    </div>\n  `\n};\n\n// Pill\nexport const Pills = {\n  render: () => html`\n    <div style=\"display: flex; flex-wrap: wrap; gap: 0.5rem; align-items: center;\">\n      <sl-tag size=\"small\" pill>Small</sl-tag>\n      <sl-tag size=\"medium\" pill>Medium</sl-tag>\n      <sl-tag size=\"large\" pill>Large</sl-tag>\n    </div>\n  `\n};\n\n// Removable\nexport const Removable = {\n  render: () => {\n    const handleRemove = (event) => {\n      const tag = event.target;\n      tag.style.opacity = '0';\n      setTimeout(() => tag.style.opacity = '1', 2000);\n    };\n\n    return html`\n      <div style=\"display: flex; flex-wrap: wrap; gap: 0.5rem; align-items: center;\">\n        <sl-tag size=\"small\" removable @sl-remove=${handleRemove}>Small</sl-tag>\n        <sl-tag size=\"medium\" removable @sl-remove=${handleRemove}>Medium</sl-tag>\n        <sl-tag size=\"large\" removable @sl-remove=${handleRemove}>Large</sl-tag>\n      </div>\n      <style>\n        sl-tag {\n          transition: var(--sl-transition-medium) opacity;\n        }\n      </style>\n    `;\n  }\n};\n\n// With custom colors\nexport const CustomColors = {\n  render: () => html`\n    <div style=\"display: flex; flex-wrap: wrap; gap: 0.5rem;\">\n      <sl-tag style=\"background: var(--sl-color-primary-100); color: var(--sl-color-primary-800); border-color: var(--sl-color-primary-200);\">\n        Custom\n      </sl-tag>\n      <sl-tag style=\"background: var(--sl-color-success-100); color: var(--sl-color-success-800); border-color: var(--sl-color-success-200);\">\n        Custom\n      </sl-tag>\n    </div>\n  `\n};\n\n// With icons\nexport const WithIcons = {\n  render: () => html`\n    <div style=\"display: flex; flex-wrap: wrap; gap: 0.5rem;\">\n      <sl-tag variant=\"primary\">\n        <sl-icon slot=\"prefix\" name=\"tag\"></sl-icon>\n        Label\n      </sl-tag>\n      <sl-tag variant=\"success\">\n        <sl-icon slot=\"prefix\" name=\"check2-circle\"></sl-icon>\n        Success\n      </sl-tag>\n      <sl-tag variant=\"warning\">\n        <sl-icon slot=\"prefix\" name=\"exclamation-triangle\"></sl-icon>\n        Warning\n      </sl-tag>\n      <sl-tag variant=\"danger\">\n        <sl-icon slot=\"prefix\" name=\"exclamation-octagon\"></sl-icon>\n        Danger\n      </sl-tag>\n    </div>\n  `\n}; ;export const __namedExportsOrder = [\"Variants\",\"Sizes\",\"Pills\",\"Removable\",\"CustomColors\",\"WithIcons\"];"],"names":[],"sourceRoot":""}